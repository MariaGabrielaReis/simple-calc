// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const media_query = flutter_sdk.src__widgets__media_query;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const flex = flutter_sdk.src__rendering__flex;
  const divider = flutter_sdk.src__material__divider;
  const text_style = flutter_sdk.src__painting__text_style;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const text_field = flutter_sdk.src__material__text_field;
  const text_input = flutter_sdk.src__services__text_input;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var calculator = Object.create(dart.library);
  var operations_enum = Object.create(dart.library);
  var button = Object.create(dart.library);
  var text_input$ = Object.create(dart.library);
  var $toString = dartx.toString;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: calculator.Calculator.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: operations_enum.Operations.prototype,
        [_Enum__name]: "sum",
        [_Enum_index]: 0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: operations_enum.Operations.prototype,
        [_Enum__name]: "subtraction",
        [_Enum_index]: 1
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: operations_enum.Operations.prototype,
        [_Enum__name]: "division",
        [_Enum_index]: 2
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: operations_enum.Operations.prototype,
        [_Enum__name]: "multiplication",
        [_Enum_index]: 3
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Calculadora"
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 8,
        [SizedBox_width]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C10() {
      return C[10] = dart.constList([C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5], operations_enum.Operations);
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: true,
        [TextInputType_signed]: false,
        [TextInputType_index]: 2
      });
    }
  }, false);
  var C = Array(12).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:flutter_app/screens/calculator.dart",
    "package:flutter_app/utils/operations-enum.dart",
    "package:flutter_app/ui/button.dart",
    "package:flutter_app/ui/text_input.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.MyApp = class MyApp extends framework.StatelessWidget {
    build(context) {
      return new app.MaterialApp.new({title: "Simple Calculator", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.teal}), home: C[1] || CT.C1});
    }
    static ['_#new#tearOff']() {
      return new main.MyApp.new();
    }
  };
  (main.MyApp.new = function() {
    main.MyApp.__proto__.new.call(this);
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.main = function main$0() {
    return binding.runApp(new main.MyApp.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  calculator.Calculator = class Calculator extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new calculator.Calculator.new({key: key});
    }
    createState() {
      return new calculator._CalculatorState.new();
    }
  };
  (calculator.Calculator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    calculator.Calculator.__proto__.new.call(this, {key: key});
    ;
  }).prototype = calculator.Calculator.prototype;
  dart.addTypeTests(calculator.Calculator);
  dart.addTypeCaches(calculator.Calculator);
  dart.setMethodSignature(calculator.Calculator, () => ({
    __proto__: dart.getMethods(calculator.Calculator.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(calculator.Calculator, I[1]);
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var _calculate = dart.privateName(calculator, "_calculate");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  calculator._CalculatorState = class _CalculatorState extends framework.State$(calculator.Calculator) {
    [_calculate](action) {
      let firstNumber = core.double.parse(this.firstNumberController.text);
      let secondNumber = core.double.parse(this.secondNumberController.text);
      this.setState(dart.fn(() => {
        switch (action) {
          case C[2] || CT.C2:
            {
              this.result = firstNumber + secondNumber;
              break;
            }
          case C[3] || CT.C3:
            {
              this.result = firstNumber - secondNumber;
              break;
            }
          case C[4] || CT.C4:
            {
              this.result = firstNumber / secondNumber;
              break;
            }
          case C[5] || CT.C5:
            {
              this.result = firstNumber * secondNumber;
              break;
            }
          default:
            {
              this.result = 0;
              break;
            }
        }
      }, T.VoidTovoid()));
    }
    build(context) {
      let tenPercentOfScreen = media_query.MediaQuery.of(context).size.width / 100 * 10;
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[6] || CT.C6}), body: new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: tenPercentOfScreen, horizontal: tenPercentOfScreen > 64 ? tenPercentOfScreen * 1.5 : tenPercentOfScreen}), child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new text_input$.Input.new({controller: this.firstNumberController, placeholder: "Primeiro número"}), C[7] || CT.C7, new text_input$.Input.new({controller: this.secondNumberController, placeholder: "Segundo número"}), C[8] || CT.C8, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceAround, children: T.JSArrayOfWidget().of([new button.Button.new({label: "Somar", onPress: dart.fn(() => this[_calculate](operations_enum.Operations.sum), T.VoidTovoid())}), new button.Button.new({label: "Subtrair", onPress: dart.fn(() => this[_calculate](operations_enum.Operations.subtraction), T.VoidTovoid())})])}), C[7] || CT.C7, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceAround, children: T.JSArrayOfWidget().of([new button.Button.new({label: "Dividir", onPress: dart.fn(() => this[_calculate](operations_enum.Operations.division), T.VoidTovoid())}), new button.Button.new({label: "Multiplicar", onPress: dart.fn(() => this[_calculate](operations_enum.Operations.multiplication), T.VoidTovoid())})])}), C[8] || CT.C8, new divider.Divider.new({height: 1, color: colors.Colors.grey}), C[8] || CT.C8, new text.Text.new("Resultado: " + dart.str(this.result), {style: C[9] || CT.C9})])})})});
    }
    static ['_#new#tearOff']() {
      return new calculator._CalculatorState.new();
    }
  };
  (calculator._CalculatorState.new = function() {
    this.firstNumberController = new editable_text.TextEditingController.new();
    this.secondNumberController = new editable_text.TextEditingController.new();
    this.result = 0;
    calculator._CalculatorState.__proto__.new.call(this);
    ;
  }).prototype = calculator._CalculatorState.prototype;
  dart.addTypeTests(calculator._CalculatorState);
  dart.addTypeCaches(calculator._CalculatorState);
  dart.setMethodSignature(calculator._CalculatorState, () => ({
    __proto__: dart.getMethods(calculator._CalculatorState.__proto__),
    [_calculate]: dart.fnType(dart.void, [operations_enum.Operations]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(calculator._CalculatorState, I[1]);
  dart.setFieldSignature(calculator._CalculatorState, () => ({
    __proto__: dart.getFields(calculator._CalculatorState.__proto__),
    firstNumberController: dart.fieldType(editable_text.TextEditingController),
    secondNumberController: dart.fieldType(editable_text.TextEditingController),
    result: dart.fieldType(core.double)
  }));
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  operations_enum.Operations = class Operations extends core._Enum {
    [_enumToString]() {
      return "Operations." + this[_name];
    }
  };
  (operations_enum.Operations.new = function(index, name) {
    operations_enum.Operations.__proto__.new.call(this, index, name);
    ;
  }).prototype = operations_enum.Operations.prototype;
  dart.addTypeTests(operations_enum.Operations);
  dart.addTypeCaches(operations_enum.Operations);
  dart.setMethodSignature(operations_enum.Operations, () => ({
    __proto__: dart.getMethods(operations_enum.Operations.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(operations_enum.Operations, I[2]);
  dart.setStaticFieldSignature(operations_enum.Operations, () => ['values', 'sum', 'subtraction', 'division', 'multiplication']);
  dart.defineLazy(operations_enum.Operations, {
    /*operations_enum.Operations.values*/get values() {
      return C[10] || CT.C10;
    },
    /*operations_enum.Operations.sum*/get sum() {
      return C[2] || CT.C2;
    },
    /*operations_enum.Operations.subtraction*/get subtraction() {
      return C[3] || CT.C3;
    },
    /*operations_enum.Operations.division*/get division() {
      return C[4] || CT.C4;
    },
    /*operations_enum.Operations.multiplication*/get multiplication() {
      return C[5] || CT.C5;
    }
  }, false);
  var label$ = dart.privateName(button, "Button.label");
  var onPress$ = dart.privateName(button, "Button.onPress");
  button.Button = class Button extends framework.StatefulWidget {
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    get onPress() {
      return this[onPress$];
    }
    set onPress(value) {
      super.onPress = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let onPress = opts && 'onPress' in opts ? opts.onPress : null;
      return new button.Button.new({key: key, label: label, onPress: onPress});
    }
    createState() {
      return new button._ButtonState.new();
    }
  };
  (button.Button.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let onPress = opts && 'onPress' in opts ? opts.onPress : null;
    this[label$] = label;
    this[onPress$] = onPress;
    button.Button.__proto__.new.call(this, {key: key});
    ;
  }).prototype = button.Button.prototype;
  dart.addTypeTests(button.Button);
  dart.addTypeCaches(button.Button);
  dart.setMethodSignature(button.Button, () => ({
    __proto__: dart.getMethods(button.Button.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(button.Button, I[3]);
  dart.setFieldSignature(button.Button, () => ({
    __proto__: dart.getFields(button.Button.__proto__),
    label: dart.finalFieldType(core.String),
    onPress: dart.finalFieldType(core.Function)
  }));
  button._ButtonState = class _ButtonState extends framework.State$(button.Button) {
    build(context) {
      let width = media_query.MediaQuery.of(context).size.width / 3;
      return new basic.SizedBox.new({height: 32, width: width > 200 ? 200 : width, child: new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => dart.dsend(this.widget, 'onPress', []), T.VoidTovoid()), child: new text.Text.new(this.widget.label)})});
    }
    static ['_#new#tearOff']() {
      return new button._ButtonState.new();
    }
  };
  (button._ButtonState.new = function() {
    button._ButtonState.__proto__.new.call(this);
    ;
  }).prototype = button._ButtonState.prototype;
  dart.addTypeTests(button._ButtonState);
  dart.addTypeCaches(button._ButtonState);
  dart.setMethodSignature(button._ButtonState, () => ({
    __proto__: dart.getMethods(button._ButtonState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(button._ButtonState, I[3]);
  var controller$ = dart.privateName(text_input$, "Input.controller");
  var placeholder$ = dart.privateName(text_input$, "Input.placeholder");
  text_input$.Input = class Input extends framework.StatefulWidget {
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get placeholder() {
      return this[placeholder$];
    }
    set placeholder(value) {
      super.placeholder = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let placeholder = opts && 'placeholder' in opts ? opts.placeholder : null;
      return new text_input$.Input.new({key: key, controller: controller, placeholder: placeholder});
    }
    createState() {
      return new text_input$._InputState.new();
    }
  };
  (text_input$.Input.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let placeholder = opts && 'placeholder' in opts ? opts.placeholder : null;
    this[controller$] = controller;
    this[placeholder$] = placeholder;
    text_input$.Input.__proto__.new.call(this, {key: key});
    ;
  }).prototype = text_input$.Input.prototype;
  dart.addTypeTests(text_input$.Input);
  dart.addTypeCaches(text_input$.Input);
  dart.setMethodSignature(text_input$.Input, () => ({
    __proto__: dart.getMethods(text_input$.Input.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(text_input$.Input, I[4]);
  dart.setFieldSignature(text_input$.Input, () => ({
    __proto__: dart.getFields(text_input$.Input.__proto__),
    controller: dart.finalFieldType(editable_text.TextEditingController),
    placeholder: dart.finalFieldType(core.String)
  }));
  var TextInputType_decimal = dart.privateName(text_input, "TextInputType.decimal");
  var TextInputType_signed = dart.privateName(text_input, "TextInputType.signed");
  var TextInputType_index = dart.privateName(text_input, "TextInputType.index");
  text_input$._InputState = class _InputState extends framework.State$(text_input$.Input) {
    build(context) {
      return new text_field.TextField.new({controller: this.widget.controller, keyboardType: C[11] || CT.C11, decoration: new input_decorator.InputDecoration.new({hintText: "Exemplo: 21", border: new input_border.OutlineInputBorder.new(), label: new text.Text.new(this.widget.placeholder)})});
    }
    static ['_#new#tearOff']() {
      return new text_input$._InputState.new();
    }
  };
  (text_input$._InputState.new = function() {
    text_input$._InputState.__proto__.new.call(this);
    ;
  }).prototype = text_input$._InputState.prototype;
  dart.addTypeTests(text_input$._InputState);
  dart.addTypeCaches(text_input$._InputState);
  dart.setMethodSignature(text_input$._InputState, () => ({
    __proto__: dart.getMethods(text_input$._InputState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(text_input$._InputState, I[4]);
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/screens/calculator.dart": calculator,
    "package:flutter_app/utils/operations-enum.dart": operations_enum,
    "package:flutter_app/ui/button.dart": button,
    "package:flutter_app/ui/text_input.dart": text_input$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/screens/calculator.dart","/zapp/project/lib/utils/operations-enum.dart","/zapp/project/lib/ui/button.dart","/zapp/project/lib/ui/text_input.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    screens__calculator: calculator,
    utils__operations_enum: operations_enum,
    ui__button: button,
    ui__text_input: text_input$
  };
}));

//# sourceMappingURL=main.js.map
